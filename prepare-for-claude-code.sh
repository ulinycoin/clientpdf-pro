#!/bin/bash

# ================================
# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è Claude Code
# LocalPDF Documentation Integration
# ================================

echo "ü§ñ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ LocalPDF –¥–ª—è Claude Code"
echo "=============================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
if [ ! -f "package.json" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ clientpdf-pro"
    exit 1
fi

echo "üìÅ –ü—Ä–æ–µ–∫—Ç: $(pwd)"
echo "üìÑ package.json –Ω–∞–π–¥–µ–Ω ‚úÖ"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:"

if [ -f "localpdf-docs.json" ]; then
    echo "‚úÖ localpdf-docs.json - $(wc -c < localpdf-docs.json) –±–∞–π—Ç"
else
    echo "‚ùå localpdf-docs.json –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

if [ -f "LocalPDF-Documentation.md" ]; then
    echo "‚úÖ LocalPDF-Documentation.md - $(wc -l < LocalPDF-Documentation.md) —Å—Ç—Ä–æ–∫"
else
    echo "‚ùå LocalPDF-Documentation.md –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

if [ -f "CLAUDE_CODE_TASK.md" ]; then
    echo "‚úÖ CLAUDE_CODE_TASK.md - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ"
else
    echo "‚ùå CLAUDE_CODE_TASK.md –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

# –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
echo ""
echo "üèóÔ∏è –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:"

# PDF –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
if [ -d "src/pages/tools" ]; then
    tool_count=$(find src/pages/tools -name "*.tsx" | wc -l)
    echo "üõ†Ô∏è PDF –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: $tool_count"
else
    echo "‚ùå –ü–∞–ø–∫–∞ src/pages/tools –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –Ø–∑—ã–∫–∏
if [ -d "src/locales" ]; then
    lang_count=$(find src/locales -mindepth 1 -maxdepth 1 -type d | wc -l)
    echo "üåç –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —è–∑—ã–∫–æ–≤: $lang_count"
    echo "   –Ø–∑—ã–∫–∏: $(ls src/locales | tr '\n' ' ')"
else
    echo "‚ùå –ü–∞–ø–∫–∞ src/locales –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
if [ -d "src/components" ]; then
    component_count=$(find src/components -name "*.tsx" | wc -l)
    echo "‚öõÔ∏è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: $component_count"
else
    echo "‚ùå –ü–∞–ø–∫–∞ src/components –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo ""
echo "üì¶ –ö–ª—é—á–µ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:"
if command -v node >/dev/null 2>&1; then
    node -e "
    const pkg = require('./package.json');
    const key = ['pdf-lib', 'pdfjs-dist', 'tesseract.js', 'react', 'tailwindcss'];
    key.forEach(lib => {
        if (pkg.dependencies[lib] || pkg.devDependencies[lib]) {
            const version = pkg.dependencies[lib] || pkg.devDependencies[lib];
            console.log(\`‚úÖ \${lib}: \${version}\`);
        } else {
            console.log(\`‚ùå \${lib}: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\`);
        }
    });
    "
else
    echo "‚ö†Ô∏è Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
echo ""
echo "üìÇ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è Claude Code:"

mkdir -p src/components/docs
echo "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: src/components/docs"

mkdir -p src/pages/api
echo "‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: src/pages/api"

# –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ—Ç–æ–≤–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
echo ""
echo "üåç –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–ª—è docs:"

for lang in en de fr es ru; do
    docs_file="src/locales/$lang/docs.ts"
    if [ ! -f "$docs_file" ]; then
        mkdir -p "src/locales/$lang"
        echo "export const docs = {
  navigation: 'Documentation',
  sections: {
    overview: 'Overview',
    tools: 'Tools', 
    libraries: 'Libraries'
  }
};" > "$docs_file"
        echo "‚úÖ –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π —Ñ–∞–π–ª: $docs_file"
    else
        echo "‚ö†Ô∏è –§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $docs_file"
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ–µ–∫—Ç –º–æ–∂–µ—Ç —Å–æ–±—Ä–∞—Ç—å—Å—è
echo ""
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞:"
if npm run build --dry-run >/dev/null 2>&1; then
    echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Å–±–æ—Ä–∫–µ"
else
    echo "‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–±–æ—Ä–∫–æ–π - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é"
fi

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è Claude Code
echo ""
echo "ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è Claude Code:"
echo "================================"
echo "üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
echo "üéØ –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞: –°–æ–∑–¥–∞—Ç—å /docs —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å AI-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π"
echo "üìä –ö–ª—é—á–µ–≤–∞—è –º–µ—Ç—Ä–∏–∫–∞: 69% AI-—Ç—Ä–∞—Ñ–∏–∫–∞ (ChatGPT)"
echo "üåç –Ø–∑—ã–∫–∏: en (–æ—Å–Ω–æ–≤–Ω–æ–π), de, fr, es, ru"
echo "üõ†Ô∏è –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: $tool_count PDF —É—Ç–∏–ª–∏—Ç"
echo ""
echo "üìã –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã:"
echo "   ‚Ä¢ CLAUDE_CODE_TASK.md - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ"
echo "   ‚Ä¢ localpdf-docs.json - –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"  
echo "   ‚Ä¢ src/components/templates/StandardToolPageTemplate.tsx - –±–∞–∑–æ–≤—ã–π —à–∞–±–ª–æ–Ω"
echo "   ‚Ä¢ src/hooks/useI18n.tsx - –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å"
echo "   ‚Ä¢ tailwind.config.js - —Å—Ç–∏–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞"
echo ""
echo "üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:"
echo "   1. DocsPage.tsx + —Ä–æ—É—Ç–∏–Ω–≥ (HIGH)"
echo "   2. AI-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è + SEO (HIGH)" 
echo "   3. –ú—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å (MEDIUM)"
echo "   4. –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä (LOW)"
echo ""
echo "üö® –í–∞–∂–Ω–æ:"
echo "   ‚Ä¢ –§–æ–∫—É—Å –Ω–∞ AI-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é (69% —Ç—Ä–∞—Ñ–∏–∫–∞ –æ—Ç ChatGPT!)"
echo "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –¥–∏–∑–∞–π–Ω –ø—Ä–æ–µ–∫—Ç–∞"
echo "   ‚Ä¢ –ù–µ –ª–æ–º–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
echo "   ‚Ä¢ –°–ª–µ–¥–æ–≤–∞—Ç—å TypeScript best practices"
echo ""
echo "üöÄ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ —Å Claude Code!"
echo ""
echo "üí° –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:"
echo "   –û—Ç–∫—Ä–æ–π—Ç–µ Claude Code –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏–∑: $(pwd)"
echo "   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ CLAUDE_CODE_TASK.md –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ"

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
echo ""
echo "‚úÖ Checklist –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ Claude Code:"
echo "   [‚úì] –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
echo "   [‚úì] –î–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã"
echo "   [‚úì] –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã" 
echo "   [‚úì] –ë–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã"
echo "   [‚úì] –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"
echo ""
echo "üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏!"
