import { CsvToPdfConverter } from '../services/converters/CsvToPdfConverter';

/**
 * –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è CSV to PDF –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞
 * –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –≤ dev mode –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
 */

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ CSV —Ñ–∞–π–ª–∞
const createTestCSVFile = (content: string, filename: string = 'test.csv'): File => {
  const blob = new Blob([content], { type: 'text/csv' });
  return new File([blob], filename, { type: 'text/csv' });
};

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const simpleCSV = `Name,Age,City,Country
John Doe,30,New York,USA
Jane Smith,25,London,UK
Bob Johnson,35,Toronto,Canada
Alice Brown,28,Sydney,Australia`;

const complexCSV = `Product,Category,Price,Stock,Rating,Description
Laptop Pro,"Electronics & Computers",1299.99,50,4.5,"High-performance laptop with SSD"
Coffee Maker,"Home & Kitchen",89.99,100,4.2,"Automatic drip coffee maker"
Running Shoes,"Sports & Outdoors",129.99,75,4.7,"Lightweight running shoes for marathon"
Book Set,"Books & Media",45.99,200,4.8,"Complete collection of programming books"`;

const tsvData = `Name	Position	Salary	Department
Alice	Developer	75000	IT
Bob	Manager	95000	Sales
Carol	Designer	65000	Marketing
David	Analyst	70000	Finance`;

export const runCSVTests = async () => {
  console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ CSV to PDF –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞...');

  try {
    // –¢–µ—Å—Ç 1: –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤
    console.log('\nüìã –¢–µ—Å—Ç 1: –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤');
    
    const validFile = createTestCSVFile(simpleCSV);
    const invalidFile = new File([''], 'test.txt', { type: 'text/plain' });
    const largeFile = new File([new Array(1000000).join('a')], 'large.csv', { type: 'text/csv' });

    const validationResults = [
      CsvToPdfConverter.validateCSV(validFile),
      CsvToPdfConverter.validateCSV(invalidFile),
      CsvToPdfConverter.validateCSV(largeFile)
    ];

    console.log('‚úÖ –í–∞–ª–∏–¥–Ω—ã–π CSV:', validationResults[0]);
    console.log('‚ùå –ü—É—Å—Ç–æ–π —Ñ–∞–π–ª:', validationResults[1]);
    console.log('‚ö†Ô∏è –ë–æ–ª—å—à–æ–π —Ñ–∞–π–ª:', validationResults[2]);

    // –¢–µ—Å—Ç 2: –ü–∞—Ä—Å–∏–Ω–≥ –ø—Ä–æ—Å—Ç–æ–≥–æ CSV
    console.log('\nüìä –¢–µ—Å—Ç 2: –ü–∞—Ä—Å–∏–Ω–≥ –ø—Ä–æ—Å—Ç–æ–≥–æ CSV');
    
    const simpleResult = await CsvToPdfConverter.parseCSV(validFile);
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞:', {
      rows: simpleResult.rowCount,
      columns: simpleResult.columnCount,
      delimiter: simpleResult.delimiter,
      headers: simpleResult.headers
    });

    // –¢–µ—Å—Ç 3: –ü–∞—Ä—Å–∏–Ω–≥ TSV
    console.log('\nüìä –¢–µ—Å—Ç 3: –ü–∞—Ä—Å–∏–Ω–≥ TSV');
    
    const tsvFile = createTestCSVFile(tsvData, 'test.tsv');
    const tsvResult = await CsvToPdfConverter.parseCSV(tsvFile);
    console.log('TSV —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', {
      rows: tsvResult.rowCount,
      columns: tsvResult.columnCount,
      delimiter: tsvResult.delimiter,
      headers: tsvResult.headers
    });

    // –¢–µ—Å—Ç 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏
    console.log('\nüé® –¢–µ—Å—Ç 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF');
    
    const complexFile = createTestCSVFile(complexCSV);
    const complexResult = await CsvToPdfConverter.parseCSV(complexFile);

    const testConfigs = [
      {
        name: 'Grid Style',
        options: {
          orientation: 'landscape' as const,
          pageSize: 'a4' as const,
          tableStyle: 'grid' as const,
          title: 'Test Grid Style PDF'
        }
      },
      {
        name: 'Striped Style',
        options: {
          orientation: 'portrait' as const,
          pageSize: 'a4' as const,
          tableStyle: 'striped' as const,
          includeRowNumbers: true,
          title: 'Test Striped Style PDF'
        }
      }
    ];

    for (const config of testConfigs) {
      try {
        const pdfBytes = await CsvToPdfConverter.convertToPDF(complexResult, config.options);
        console.log(`‚úÖ ${config.name}: PDF —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω (${pdfBytes.length} bytes)`);
      } catch (error) {
        console.error(`‚ùå ${config.name}: –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF:`, error);
      }
    }

    // –¢–µ—Å—Ç 5: –û–ø—Ü–∏–∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    console.log('\nüîç –¢–µ—Å—Ç 5: –û–ø—Ü–∏–∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞');
    
    const previewOptions = CsvToPdfConverter.getPreviewOptions();
    console.log('Preview –æ–ø—Ü–∏–∏:', previewOptions);

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
    
    return {
      success: true,
      simpleResult,
      tsvResult,
      complexResult
    };

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö:', error);
    return {
      success: false,
      error
    };
  }
};

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
export const downloadTestPDF = async (csvContent: string, filename: string = 'test-output.pdf') => {
  try {
    const file = createTestCSVFile(csvContent);
    const parseResult = await CsvToPdfConverter.parseCSV(file);
    const pdfBytes = await CsvToPdfConverter.convertToPDF(parseResult, {
      orientation: 'landscape',
      pageSize: 'a4',
      tableStyle: 'grid',
      title: `Test PDF - ${new Date().toLocaleDateString()}`,
      includeRowNumbers: true
    });

    // –°–æ–∑–¥–∞–Ω–∏–µ blob –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
    const blob = new Blob([pdfBytes], { type: 'application/pdf' });
    const url = URL.createObjectURL(blob);
    
    const link = document.createElement('a');
    link.href = url;
    link.download = filename;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    
    URL.revokeObjectURL(url);
    
    console.log(`‚úÖ PDF —Å–∫–∞—á–∞–Ω: ${filename}`);
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è PDF:', error);
    return false;
  }
};

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ dev mode
if (import.meta.env.DEV) {
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª—è
  setTimeout(() => {
    console.log('üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ CSV –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞...');
    runCSVTests();
  }, 2000);
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
(window as any).csvTests = {
  runCSVTests,
  downloadTestPDF,
  simpleCSV,
  complexCSV,
  tsvData
};
