import React, { useState } from 'react';
import { useAccessibilityPreferences } from '../../hooks/useAccessibilityPreferences';
import GlassModal from '../atoms/GlassModal';

export interface AccessibilityPanelProps {
  isOpen: boolean;
  onClose: () => void;
  className?: string;
}

const AccessibilityPanel: React.FC<AccessibilityPanelProps> = ({
  isOpen,
  onClose,
  className = ''
}) => {
  const { preferences, updatePreference, resetToDefaults, applySystemPreferences } = useAccessibilityPreferences();
  const [activeTab, setActiveTab] = useState<'motion' | 'visual' | 'navigation'>('motion');

  const tabs = [
    { id: 'motion', label: '–ê–Ω–∏–º–∞—Ü–∏–∏', icon: 'üé≠' },
    { id: 'visual', label: '–í–∏–∑—É–∞–ª—å–Ω—ã–µ', icon: 'üëÅÔ∏è' },
    { id: 'navigation', label: '–ù–∞–≤–∏–≥–∞—Ü–∏—è', icon: '‚å®Ô∏è' }
  ];

  const fontSizeOptions = [
    { value: 'small', label: '–ú–∞–ª–µ–Ω—å–∫–∏–π', example: '–ê–∞' },
    { value: 'medium', label: '–°—Ä–µ–¥–Ω–∏–π', example: '–ê–∞' },
    { value: 'large', label: '–ë–æ–ª—å—à–æ–π', example: '–ê–∞' },
    { value: 'extra-large', label: '–û—á–µ–Ω—å –±–æ–ª—å—à–æ–π', example: '–ê–∞' }
  ] as const;

  return (
    <GlassModal
      isOpen={isOpen}
      onClose={onClose}
      title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"
      variant="privacy"
      size="lg"
      className={className}
    >
      <div className="space-y-6">
        {/* Quick Actions */}
        <div className="grid grid-cols-2 gap-3">
          <button
            onClick={applySystemPreferences}
            className="btn-ocean-modern text-sm py-2"
          >
            üîÑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </button>
          <button
            onClick={resetToDefaults}
            className="btn-privacy-modern text-sm py-2"
          >
            ‚Ü∫ –°–±—Ä–æ—Å–∏—Ç—å –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
          </button>
        </div>

        {/* Tabs */}
        <div className="flex space-x-1 bg-privacy-100 dark:bg-privacy-800 p-1 rounded-lg">
          {tabs.map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id as any)}
              className={`
                flex-1 flex items-center justify-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-all duration-200
                ${activeTab === tab.id
                  ? 'bg-white dark:bg-privacy-700 text-privacy-900 dark:text-privacy-100 shadow-sm'
                  : 'text-privacy-600 dark:text-privacy-400 hover:text-privacy-800 dark:hover:text-privacy-200'
                }
              `}
            >
              <span>{tab.icon}</span>
              <span>{tab.label}</span>
            </button>
          ))}
        </div>

        {/* Tab Content */}
        <div className="min-h-[300px]">
          {/* Motion Tab */}
          {activeTab === 'motion' && (
            <div className="space-y-6">
              <div className="space-y-4">
                <div className="flex items-start justify-between">
                  <div className="flex-1">
                    <h3 className="font-medium text-privacy-800 dark:text-privacy-200 mb-1">
                      –£–º–µ–Ω—å—à–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
                    </h3>
                    <p className="text-sm text-privacy-600 dark:text-privacy-400">
                      –û—Ç–∫–ª—é—á–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏ –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç–∞
                    </p>
                  </div>
                  <label className="relative inline-flex items-center cursor-pointer ml-4">
                    <input
                      type="checkbox"
                      checked={preferences.reducedMotion}
                      onChange={(e) => updatePreference('reducedMotion', e.target.checked)}
                      className="sr-only peer"
                    />
                    <div className="w-11 h-6 bg-privacy-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-privacy-300 dark:peer-focus:ring-privacy-800 rounded-full peer dark:bg-privacy-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-privacy-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-privacy-600 peer-checked:bg-privacy-600"></div>
                  </label>
                </div>

                {/* Animation Preview */}
                <div className="p-4 bg-privacy-50 dark:bg-privacy-900 rounded-lg">
                  <div className="text-xs text-privacy-500 mb-2">–ü—Ä–µ–≤—å—é –∞–Ω–∏–º–∞—Ü–∏–∏:</div>
                  <div className="flex items-center space-x-4">
                    <div className={`w-8 h-8 bg-seafoam-400 rounded-full ${preferences.reducedMotion ? '' : 'animate-pulse'}`} />
                    <div className={`w-6 h-6 bg-ocean-400 rounded ${preferences.reducedMotion ? '' : 'animate-bounce'}`} />
                    <div className={`w-4 h-4 bg-privacy-accent rounded-full ${preferences.reducedMotion ? '' : 'gentle-float'}`} />
                  </div>
                </div>

                <div className="text-sm text-privacy-600 dark:text-privacy-400">
                  {preferences.reducedMotion 
                    ? '‚úÖ –ê–Ω–∏–º–∞—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞'
                    : '‚ÑπÔ∏è –ê–Ω–∏–º–∞—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω—ã –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–ø—ã—Ç–∞'
                  }
                </div>
              </div>
            </div>
          )}

          {/* Visual Tab */}
          {activeTab === 'visual' && (
            <div className="space-y-6">
              {/* High Contrast */}
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <h3 className="font-medium text-privacy-800 dark:text-privacy-200 mb-1">
                    –í—ã—Å–æ–∫–∞—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å
                  </h3>
                  <p className="text-sm text-privacy-600 dark:text-privacy-400">
                    –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç—Ä–∞—Å—Ç —Ü–≤–µ—Ç–æ–≤ –¥–ª—è –ª—É—á—à–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞ –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                  </p>
                </div>
                <label className="relative inline-flex items-center cursor-pointer ml-4">
                  <input
                    type="checkbox"
                    checked={preferences.highContrast}
                    onChange={(e) => updatePreference('highContrast', e.target.checked)}
                    className="sr-only peer"
                  />
                  <div className="w-11 h-6 bg-privacy-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-privacy-300 dark:peer-focus:ring-privacy-800 rounded-full peer dark:bg-privacy-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-privacy-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-privacy-600 peer-checked:bg-privacy-600"></div>
                </label>
              </div>

              {/* Font Size */}
              <div>
                <h3 className="font-medium text-privacy-800 dark:text-privacy-200 mb-3">
                  –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
                </h3>
                <div className="grid grid-cols-2 gap-2">
                  {fontSizeOptions.map((option) => (
                    <button
                      key={option.value}
                      onClick={() => updatePreference('fontSize', option.value)}
                      className={`
                        p-3 rounded-lg border-2 transition-all duration-200 text-left
                        ${preferences.fontSize === option.value
                          ? 'border-privacy-accent bg-privacy-50 dark:bg-privacy-800'
                          : 'border-privacy-200 dark:border-privacy-700 hover:border-privacy-300'
                        }
                      `}
                    >
                      <div className="flex items-center justify-between">
                        <div>
                          <div className="font-medium text-privacy-800 dark:text-privacy-200">
                            {option.label}
                          </div>
                          <div className="text-xs text-privacy-600 dark:text-privacy-400">
                            {option.value === 'small' && '14px'}
                            {option.value === 'medium' && '16px'}
                            {option.value === 'large' && '18px'}
                            {option.value === 'extra-large' && '20px'}
                          </div>
                        </div>
                        <div 
                          className="text-privacy-600 dark:text-privacy-400"
                          style={{ 
                            fontSize: option.value === 'small' ? '14px' : 
                                     option.value === 'medium' ? '16px' :
                                     option.value === 'large' ? '18px' : '20px'
                          }}
                        >
                          {option.example}
                        </div>
                      </div>
                    </button>
                  ))}
                </div>
              </div>

              {/* Screen Reader */}
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <h3 className="font-medium text-privacy-800 dark:text-privacy-200 mb-1">
                    –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–∫—Ä–∏–Ω—Ä–∏–¥–µ—Ä–æ–≤
                  </h3>
                  <p className="text-sm text-privacy-600 dark:text-privacy-400">
                    –£–ª—É—á—à–∞–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏ —á—Ç–µ–Ω–∏—è —Å —ç–∫—Ä–∞–Ω–∞
                  </p>
                </div>
                <label className="relative inline-flex items-center cursor-pointer ml-4">
                  <input
                    type="checkbox"
                    checked={preferences.screenReaderOptimized}
                    onChange={(e) => updatePreference('screenReaderOptimized', e.target.checked)}
                    className="sr-only peer"
                  />
                  <div className="w-11 h-6 bg-privacy-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-privacy-300 dark:peer-focus:ring-privacy-800 rounded-full peer dark:bg-privacy-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-privacy-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-privacy-600 peer-checked:bg-privacy-600"></div>
                </label>
              </div>
            </div>
          )}

          {/* Navigation Tab */}
          {activeTab === 'navigation' && (
            <div className="space-y-6">
              {/* Enhanced Focus */}
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <h3 className="font-medium text-privacy-800 dark:text-privacy-200 mb-1">
                    –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–∏–¥–∏–º–æ—Å—Ç—å —Ñ–æ–∫—É—Å–∞
                  </h3>
                  <p className="text-sm text-privacy-600 dark:text-privacy-400">
                    –î–µ–ª–∞–µ—Ç –≥—Ä–∞–Ω–∏—Ü—ã —Ñ–æ–∫—É—Å–∞ –±–æ–ª–µ–µ –∑–∞–º–µ—Ç–Ω—ã–º–∏ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
                  </p>
                </div>
                <label className="relative inline-flex items-center cursor-pointer ml-4">
                  <input
                    type="checkbox"
                    checked={preferences.focusVisible}
                    onChange={(e) => updatePreference('focusVisible', e.target.checked)}
                    className="sr-only peer"
                  />
                  <div className="w-11 h-6 bg-privacy-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-privacy-300 dark:peer-focus:ring-privacy-800 rounded-full peer dark:bg-privacy-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-privacy-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-privacy-600 peer-checked:bg-privacy-600"></div>
                </label>
              </div>

              {/* Keyboard Navigation */}
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <h3 className="font-medium text-privacy-800 dark:text-privacy-200 mb-1">
                    –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
                  </h3>
                  <p className="text-sm text-privacy-600 dark:text-privacy-400">
                    –í–∫–ª—é—á–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
                  </p>
                </div>
                <label className="relative inline-flex items-center cursor-pointer ml-4">
                  <input
                    type="checkbox"
                    checked={preferences.keyboardNavigation}
                    onChange={(e) => updatePreference('keyboardNavigation', e.target.checked)}
                    className="sr-only peer"
                  />
                  <div className="w-11 h-6 bg-privacy-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-privacy-300 dark:peer-focus:ring-privacy-800 rounded-full peer dark:bg-privacy-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-privacy-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-privacy-600 peer-checked:bg-privacy-600"></div>
                </label>
              </div>

              {/* Keyboard Shortcuts Reference */}
              <div className="p-4 bg-privacy-50 dark:bg-privacy-900 rounded-lg">
                <h4 className="font-medium text-privacy-800 dark:text-privacy-200 mb-3">
                  –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
                </h4>
                <div className="grid grid-cols-2 gap-2 text-sm">
                  <div className="flex justify-between">
                    <span className="text-privacy-600 dark:text-privacy-400">–ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª:</span>
                    <kbd className="px-2 py-1 bg-privacy-200 dark:bg-privacy-700 rounded text-xs">Esc</kbd>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-privacy-600 dark:text-privacy-400">–ù–∞–≤–∏–≥–∞—Ü–∏—è:</span>
                    <kbd className="px-2 py-1 bg-privacy-200 dark:bg-privacy-700 rounded text-xs">Tab</kbd>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-privacy-600 dark:text-privacy-400">–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å:</span>
                    <kbd className="px-2 py-1 bg-privacy-200 dark:bg-privacy-700 rounded text-xs">Enter</kbd>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-privacy-600 dark:text-privacy-400">–í—ã–±–æ—Ä:</span>
                    <kbd className="px-2 py-1 bg-privacy-200 dark:bg-privacy-700 rounded text-xs">Space</kbd>
                  </div>
                </div>
              </div>
            </div>
          )}
        </div>

        {/* Footer */}
        <div className="pt-4 border-t border-privacy-200 dark:border-privacy-700">
          <div className="text-xs text-privacy-500 text-center">
            –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –∫–æ –≤—Å–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º LocalPDF
          </div>
        </div>
      </div>
    </GlassModal>
  );
};

export default AccessibilityPanel;