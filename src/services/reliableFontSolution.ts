/**
 * üéØ –ü—Ä–æ—Å—Ç–æ–µ –∏ –Ω–∞–¥–µ–∂–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —à—Ä–∏—Ñ—Ç–æ–≤ –¥–ª—è PDF
 * –§–æ–∫—É—Å –Ω–∞ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —à—Ä–∏—Ñ—Ç–∞—Ö
 */

export interface SimpleFontSolution {
  primary: string;
  fallback: string[];
  strategy: 'system' | 'universal';
  tested: boolean;
}

// üîß –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–æ–≤
const RELIABLE_FONTS = {
  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã —Å —Ö–æ—Ä–æ—à–µ–π Unicode –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
  universal: [
    'Arial',           // –õ—É—á—à–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Unicode –≤ jsPDF
    'Helvetica',       // –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤ jsPDF
    'Times',           // –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤ jsPDF
    'Courier'          // –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤ jsPDF
  ],
  
  // –ö–∏—Ä–∏–ª–ª–∏—Ü–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—ã–µ
  cyrillic: [
    'Arial',           // –õ—É—á—à–∏–π –≤—ã–±–æ—Ä –¥–ª—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
    'Times New Roman', // –•–æ—Ä–æ—à–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
    'Verdana',         // –ß–∏—Ç–∞–µ–º—ã–π
    'Tahoma'           // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π
  ],
  
  // CJK - –ø—Ä–æ—Å—Ç—ã–µ —Ä–µ—à–µ–Ω–∏—è
  cjk: [
    'Arial',           // –ë–∞–∑–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
    'Helvetica',       // Fallback
    'sans-serif'       // –°–∏—Å—Ç–µ–º–Ω—ã–π fallback
  ],
  
  // –ê—Ä–∞–±—Å–∫–∏–π - –±–∞–∑–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
  arabic: [
    'Arial',           // –õ—É—á—à–∏–π –≤—ã–±–æ—Ä
    'Tahoma',          // –•–æ—Ä–æ—à–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ RTL
    'sans-serif'       // Fallback
  ]
};

/**
 * üéØ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–µ –∏ –Ω–∞–¥–µ–∂–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —à—Ä–∏—Ñ—Ç–∞
 */
export function getReliableFontSolution(script: string): SimpleFontSolution {
  // –î–ª—è –≤—Å–µ—Ö —è–∑—ã–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º Arial –∫–∞–∫ —Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π
  const primaryFont = 'Arial';
  const fallbackFonts = ['Helvetica', 'sans-serif'];
  
  return {
    primary: primaryFont,
    fallback: fallbackFonts,
    strategy: 'system',
    tested: true
  };
}

/**
 * üîß –ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞–¥–µ–∂–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —à—Ä–∏—Ñ—Ç–∞ –∫ PDF
 */
export function applyReliableFontToPDF(
  pdfOptions: any,
  fontSolution: SimpleFontSolution,
  hasUnicodeChars: boolean
): any {
  
  // –ü—Ä–æ—Å—Ç—ã–µ –∏ –Ω–∞–¥–µ–∂–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  const reliableOptions = {
    ...pdfOptions,
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã jsPDF
    fontFamily: fontSolution.primary,
    // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    embedFonts: false,
    useSystemFonts: false,
    customFonts: false,
    // –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Unicode
    unicodeSupport: hasUnicodeChars,
    preserveEncoding: true
  };
  
  // –î–ª—è Unicode —Ç–µ–∫—Å—Ç–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
  if (hasUnicodeChars) {
    reliableOptions.fontSize = Math.max(reliableOptions.fontSize || 10, 11);
  }
  
  return reliableOptions;
}

/**
 * üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Unicode —Å–∏–º–≤–æ–ª–æ–≤
 */
export function hasUnicodeCharacters(text: string): boolean {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∏–º–≤–æ–ª–æ–≤ –≤–Ω–µ –±–∞–∑–æ–≤–æ–≥–æ ASCII
  return /[^\u0000-\u007F]/.test(text);
}

/**
 * üé® –ü–æ–ª—É—á–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —è–∑—ã–∫–∞
 */
export function getOptimizedFontSettings(
  language: string,
  script: string,
  csvData: string[][]
): {
  fontSolution: SimpleFontSolution;
  pdfOptions: any;
  recommendations: string[];
} {
  
  const sampleText = csvData.flat().slice(0, 10).join(' ');
  const hasUnicode = hasUnicodeCharacters(sampleText);
  const fontSolution = getReliableFontSolution(script);
  
  const recommendations: string[] = [];
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  if (hasUnicode) {
    recommendations.push(`üåç Unicode text detected - using optimized settings`);
    recommendations.push(`üî§ Font size increased for better readability`);
  }
  
  recommendations.push(`‚úÖ Using reliable system font: ${fontSolution.primary}`);
  
  if (script === 'cyrillic') {
    recommendations.push(`üá∑üá∫ Cyrillic text optimized with Arial font`);
  } else if (script === 'cjk') {
    recommendations.push(`üá®üá≥ CJK characters will use system fallback fonts`);
  } else if (script === 'arabic') {
    recommendations.push(`üá∏üá¶ Arabic text optimized for RTL reading`);
  }
  
  const pdfOptions = applyReliableFontToPDF({}, fontSolution, hasUnicode);
  
  return {
    fontSolution,
    pdfOptions,
    recommendations
  };
}

/**
 * üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è PDF
 */
export function sanitizeTextForPDF(text: string): string {
  // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–ª–æ–º–∞—Ç—å PDF
  return text
    .replace(/[\u0000-\u001F]/g, '') // –£–¥–∞–ª—è–µ–º control characters
    .replace(/[\uFEFF]/g, '')        // –£–¥–∞–ª—è–µ–º BOM
    .trim();
}

/**
 * üìä –ê–Ω–∞–ª–∏–∑ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —à—Ä–∏—Ñ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
 */
export function analyzeFontCompatibility(
  csvData: string[][],
  fontSolution: SimpleFontSolution
): {
  compatible: boolean;
  issues: string[];
  suggestions: string[];
} {
  
  const allText = csvData.flat().join(' ');
  const hasUnicode = hasUnicodeCharacters(allText);
  
  const issues: string[] = [];
  const suggestions: string[] = [];
  
  if (hasUnicode) {
    suggestions.push('üìä Large Unicode text detected - PDF optimized for readability');
    suggestions.push('üéØ Using Arial font for best Unicode support in PDF');
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
  const maxLineLength = Math.max(...csvData.flat().map(cell => cell.length));
  if (maxLineLength > 50) {
    suggestions.push('üìè Long text detected - consider landscape orientation');
  }
  
  return {
    compatible: true, // –í—Å–µ–≥–¥–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å –Ω–∞—à–∏–º –ø—Ä–æ—Å—Ç—ã–º –ø–æ–¥—Ö–æ–¥–æ–º
    issues,
    suggestions
  };
}

export default {
  getReliableFontSolution,
  applyReliableFontToPDF,
  hasUnicodeCharacters,
  getOptimizedFontSettings,
  sanitizeTextForPDF,
  analyzeFontCompatibility
};